# SPDX-FileCopyrightText: 2024 https://github.com/bobbyxng
#
# SPDX-License-Identifier: MIT

##################
# Initialisation #
##################

import sys
sys.path.append("workflow/scripts")
from _tools import create_symlinks

create_symlinks("data", "workflow/submodules/pypsa-eur-resilient/data")


####################
# Submodule import #
####################

# Define the configuration file
# configfile: "workflow/submodules/pypsa-eur-resilient/config/config.default.yaml"
# configfile: "workflow/submodules/pypsa-eur-resilient/config/plotting.default.yaml"
configfile: "config/config.default.yaml"
configfile: "config/plotting.default.yaml"
configfile: "config/config.yaml"

# Include the Snakemake workflow from the submodule
module resilient:
    snakefile:
        "submodules/pypsa-eur-resilient/Snakefile"
    config:
        config

# Use all rules from the resilient module
use rule * from resilient


####################
# Additional rules #
####################

rule push:
    params:
        cluster=f"{config['remote']['ssh']}:{config['remote']['path']}",
    shell:
        """
        rsync -uvarh --ignore-missing-args --files-from=.sync-send . {params.cluster}
        """


rule pull:
    params:
        cluster=f"{config['remote']['ssh']}:{config['remote']['path']}",
    shell:
        """
        rsync -uvarh --no-g {params.cluster}/resources . || echo "No resources directory, skipping rsync"
        rsync -uvarh --no-g {params.cluster}/results . || echo "No results directory, skipping rsync"
        rsync -uvarh --no-g {params.cluster}/logs . || echo "No logs directory, skipping rsync"
        """